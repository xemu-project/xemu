#!/usr/bin/env bash
# group: rw auto backing quick
#
# Test qcow2's bdrv_make_empty for images without internal snapshots
#
# Copyright (C) 2014 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# creator
owner=hreitz@redhat.com

seq="$(basename $0)"
echo "QA output created by $seq"

status=1	# failure is the default!

_cleanup()
{
    _cleanup_test_img
    rm -f "$TEST_DIR/blkdebug.conf"
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter
. ./common.pattern

_supported_fmt qcow2
_supported_proto file fuse
# The code path we want to test here only works for compat=1.1 images;
# blkdebug can only inject errors on bs->file, so external data files
# do not work with this test
_unsupported_imgopts 'compat=0.10' data_file

for event in l1_update empty_image_prepare reftable_update refblock_alloc; do

echo
echo "=== $event ==="
echo

TEST_IMG="$TEST_IMG.base" _make_test_img 64M
_make_test_img -b "$TEST_IMG.base" -F $IMGFMT 64M

# Some data that can be leaked when emptying the top image
$QEMU_IO -c 'write 0 64k' "$TEST_IMG" | _filter_qemu_io

cat > "$TEST_DIR/blkdebug.conf" <<EOF
[inject-error]
event = "$event"
EOF

$QEMU_IMG commit "blkdebug:$TEST_DIR/blkdebug.conf:$TEST_IMG" 2>&1 \
    | _filter_testdir | _filter_imgfmt

# There may be errors, but they should be fixed by opening the image
$QEMU_IO -c close "$TEST_IMG"

_check_test_img

done


rm -f "$TEST_DIR/blkdebug.conf"

# success, all done
echo "*** done"
rm -f $seq.full
status=0
