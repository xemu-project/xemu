#!/usr/bin/env bash
# group: rw quick
#
# Test for auto-read-only with commit block job
#
# Copyright (C) 2019 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# creator
owner=kwolf@redhat.com

seq=`basename $0`
echo "QA output created by $seq"

status=1	# failure is the default!

_cleanup()
{
    _cleanup_test_img
    for img in "$TEST_IMG".[01234]; do
        _rm_test_img "$img"
    done
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# Requires backing files and .bdrv_change_backing_file support
_supported_fmt qcow2 qed
_supported_proto file fuse

size=128M

echo
echo "=== Try commit to backing file with auto-read-only ==="
echo
TEST_IMG="$TEST_IMG.0" _make_test_img $size
TEST_IMG="$TEST_IMG.1" _make_test_img $size
TEST_IMG="$TEST_IMG.2" _make_test_img $size
TEST_IMG="$TEST_IMG.3" _make_test_img $size
TEST_IMG="$TEST_IMG.4" _make_test_img $size

(cat <<EOF
{"execute":"qmp_capabilities"}
{"execute":"block-commit",
 "arguments":{"device":"format-4", "top-node": "format-2", "base-node":"format-0", "job-id":"job0"}}
EOF
if [ "${VALGRIND_QEMU}" == "y" ]; then
    sleep 10
else
    sleep 1
fi
echo '{"execute":"quit"}'
) | $QEMU -qmp stdio -nographic -nodefaults \
    -blockdev file,node-name=file-0,filename=$TEST_IMG.0,auto-read-only=on \
    -blockdev $IMGFMT,node-name=format-0,file=file-0,read-only=on \
    -blockdev file,node-name=file-1,filename=$TEST_IMG.1,auto-read-only=on \
    -blockdev $IMGFMT,node-name=format-1,file=file-1,read-only=on,backing=format-0 \
    -blockdev file,node-name=file-2,filename=$TEST_IMG.2,auto-read-only=on \
    -blockdev $IMGFMT,node-name=format-2,file=file-2,read-only=on,backing=format-1 \
    -blockdev file,node-name=file-3,filename=$TEST_IMG.3,auto-read-only=on \
    -blockdev $IMGFMT,node-name=format-3,file=file-3,read-only=on,backing=format-2 \
    -blockdev file,node-name=file-4,filename=$TEST_IMG.4,auto-read-only=on \
    -blockdev $IMGFMT,node-name=format-4,file=file-4,read-only=on,backing=format-3 |
    _filter_qmp

# success, all done
echo "*** done"
rm -f $seq.full
status=0
